package main

import (
	"github.com/GeertJohan/go.rice/embedded"
	"time"
)

func init() {

	// define files
	file_3 := &embedded.EmbeddedFile{
		Filename:    `css/mediaman.css`,
		FileModTime: time.Unix(1408393446, 0),
		Content:     string([]byte{0x62, 0x6f, 0x64, 0x79, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x2f, 0x2a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2d, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3a, 0x20, 0x23, 0x32, 0x66, 0x33, 0x31, 0x32, 0x39, 0x3b, 0x2a, 0x2f, 0xa, 0x7d, 0xa, 0xa, 0x64, 0x69, 0x76, 0x2e, 0x72, 0x6f, 0x77, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x3a, 0x20, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x3b, 0xa, 0x7d, 0xa, 0xa, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2d, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3a, 0x20, 0x23, 0x65, 0x32, 0x65, 0x32, 0x65, 0x32, 0x3b, 0xa, 0x7d, 0xa, 0xa, 0x64, 0x69, 0x76, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x2d, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x3a, 0x20, 0x38, 0x70, 0x78, 0x3b, 0xa, 0x7d, 0xa, 0xa, 0x64, 0x69, 0x76, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x20, 0x73, 0x70, 0x61, 0x6e, 0x2e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x3b, 0xa, 0x20, 0x20, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x3a, 0x20, 0x30, 0x3b, 0xa, 0x20, 0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x20, 0x38, 0x70, 0x78, 0x3b, 0xa, 0x7d}), //++ TODO: optimize? (double allocation) or does compiler already optimize this?
	}
	file_6 := &embedded.EmbeddedFile{
		Filename:    `js/main.js`,
		FileModTime: time.Unix(1408401871, 0),
		Content:     string([]byte{0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x28, 0x69, 0x64, 0x29, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x76, 0x61, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x73, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x28, 0x27, 0x6e, 0x61, 0x76, 0x2e, 0x74, 0x6f, 0x70, 0x2d, 0x62, 0x61, 0x72, 0x20, 0x75, 0x6c, 0x2e, 0x6c, 0x65, 0x66, 0x74, 0x20, 0x6c, 0x69, 0x27, 0x29, 0x3b, 0xa, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x76, 0x61, 0x72, 0x20, 0x69, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x69, 0x20, 0x3c, 0x20, 0x6c, 0x69, 0x62, 0x73, 0x2e, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x3b, 0x20, 0x69, 0x2b, 0x2b, 0x29, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x20, 0x20, 0x76, 0x61, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x20, 0x3d, 0x20, 0x6c, 0x69, 0x62, 0x73, 0x5b, 0x69, 0x5d, 0x3b, 0xa, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x6c, 0x69, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x69, 0x64, 0x20, 0x3d, 0x3d, 0x20, 0x69, 0x64, 0x29, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x62, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x20, 0x2b, 0x3d, 0x20, 0x27, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x27, 0x3b, 0xa, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x62, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x28, 0x2f, 0x28, 0x3f, 0x3a, 0x5e, 0x7c, 0x5c, 0x73, 0x29, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x28, 0x3f, 0x21, 0x5c, 0x53, 0x29, 0x2f, 0x67, 0x2c, 0x20, 0x27, 0x27, 0x29, 0x3b, 0xa, 0x20, 0x20, 0x20, 0x20, 0x7d, 0xa, 0x20, 0x20, 0x7d, 0xa, 0x7d}), //++ TODO: optimize? (double allocation) or does compiler already optimize this?
	}

	// define dirs
	dir_1 := &embedded.EmbeddedDir{
		Filename:   ``,
		DirModTime: time.Unix(1408387571, 0),
		ChildFiles: []*embedded.EmbeddedFile{},
	}
	dir_2 := &embedded.EmbeddedDir{
		Filename:   `css`,
		DirModTime: time.Unix(1408393446, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file_3, // css/mediaman.css

		},
	}
	dir_4 := &embedded.EmbeddedDir{
		Filename:   `img`,
		DirModTime: time.Unix(1408387540, 0),
		ChildFiles: []*embedded.EmbeddedFile{},
	}
	dir_5 := &embedded.EmbeddedDir{
		Filename:   `js`,
		DirModTime: time.Unix(1408401871, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file_6, // js/main.js

		},
	}

	// link ChildDirs
	dir_1.ChildDirs = []*embedded.EmbeddedDir{
		dir_2, // css
		dir_4, // img
		dir_5, // js

	}
	dir_2.ChildDirs = []*embedded.EmbeddedDir{}
	dir_4.ChildDirs = []*embedded.EmbeddedDir{}
	dir_5.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`assets`, &embedded.EmbeddedBox{
		Name: `assets`,
		Time: time.Unix(1408402212, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"":    dir_1,
			"css": dir_2,
			"img": dir_4,
			"js":  dir_5,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"css/mediaman.css": file_3,
			"js/main.js":       file_6,
		},
	})
}
